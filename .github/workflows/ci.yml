name: CI

on:
  push:
    branches: [main, staging, trying]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  NO_STD_CHECK_TARGETS: thumbv6m-none-eabi thumbv8m.base-none-eabi riscv32i-unknown-none-elf
  NO_STD_TARGET: thumbv7em-none-eabi # firmware uses atomics
  QEMU_TARGET: thumbv7m-none-eabi

jobs:
  test:
    strategy:
      matrix:
        rust:
          - stable
          - nightly
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Install C libraries for tooling on ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install libudev-dev libusb-1.0-0-dev
      - name: Install C libraries for tooling on macOS
        if: matrix.os == 'macOS-latest'
        run: brew install libusb
      - name: Check that all crates that can be compiled for the host build, check that defmt compiles with different features, run all unit tests on the host
        run: cargo xtask -d test-host

  no-std:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ env.NO_STD_TARGET }}
      - name: Install Rust targets, build defmt crates for no_std targets, build defmt dependent crates for cortex-m targets, build panic-probe with different features
        run: cargo xtask test-cross

  lint:
    strategy:
      matrix:
        rust:
          - stable
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Run rustfmt & clippy
        run: cargo xtask test-lint

  mdbook:
    strategy:
      matrix:
        rust:
          - stable
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: latest
      - name: Run book tests
        run: cargo xtask test-book

  qemu:
    strategy:
      matrix:
        rust:
          - stable
          - nightly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          target: ${{ env.QEMU_TARGET }}
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install qemu
      - name: Run QEMU snapshot tests
        run: cargo xtask test-snapshot

  # Refs: https://github.com/rust-lang/crater/blob/9ab6f9697c901c4a44025cf0a39b73ad5b37d198/.github/workflows/bors.yml#L125-L149
  # bors.tech integration
  ci-success:
    name: ci
    if: ${{ success() }}
    needs:
      - test
      - no-std
      - lint
      - mdbook
      - qemu
    runs-on: ubuntu-20.04
    steps:
      - name: CI succeeded
        run: exit 0
